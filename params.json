{"name":"Trimps","tagline":"MIPS car-like robot emulator","body":"# Trimps - MIPS-driven robot emulator\r\n\r\n## Introduction\r\n\r\nBack in 2012, I had an electronic project at the university :\r\nMake a small robot following a line on the ground.\r\n\r\nThe tricky part was the fact the robot didn't contain a CPU but only a FPGA (programmable transistors).\r\nAll the challenge was then to design an entire MIPS CPU, load it on the FPGA in order to make it execute an embedded line-tracer algorithm program.\r\n\r\n## Why this project\r\n\r\nDuring this great project, I realized I didn't have any simulating tool, and then have to deal with numerous possible piece of failures.\r\nIndeed, when you execute a program you wrote (in assembly of course...) on a CPU you wrote, it's hard to know who is to blame.\r\nIn fact it was even worse than that given I wrote my own assembler [gopiler](https://github.com/touilleMan/gopiler) to build my code...\r\n\r\nThus the idea behind this project is to provide a simple environment to simulate a robot with an embedded MIPS CPU. Then it becomes quiet easier to develop and test at home some algorithm before loading them on the real robot with then only one possible point of failure : the designed CPU.\r\n\r\n## State\r\n\r\nFor the moment, the project is on it early days.\r\nBut be sure things are moving fast !\r\n","google":"UA-42073732-1","note":"Don't delete this file! It's used internally to help with page regeneration."}